{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/objectStores.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/machzorim.repository.ts","./src/app/_services/user.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/app/calendar/index.ts","./src/app/hebrew-date-picker-range/hebrew-date-picker-range.component.ts","./src/app/hebrew-date-picker-range/hebrew-date-picker-range.component.html","./src/app/hebrew-date-picker/hebrew-date-picker.component.ts","./src/app/hebrew-date-picker/hebrew-date-picker.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<object>, next: HttpHandler): Observable<HttpEvent<object>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload();\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\n\nconst users: User[] = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' }];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<{ username, password }>, next: HttpHandler): Observable<HttpEvent<object>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            // tslint:disable-next-line:max-line-length\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }\n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) { return error('Username or password is incorrect'); }\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            });\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) { return unauthorized(); }\n            return ok(users);\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './fake-backend';\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<Observable<HttpEvent<object>>>, next: HttpHandler): Observable<HttpEvent<object>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        const currentUser = this.authenticationService.currentUserValue;\n        const isLoggedIn = currentUser && currentUser.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","export const MACHZORIM = \"machzorim\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(username: string, password: string) {\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}","export * from './authentication.service';\nexport * from './user.service';","import { Injectable } from '@angular/core';\nimport * as objectStores from '@app/_helpers/objectStores';\nimport { Machzor } from '@app/_models';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MachzorimRepository {\n\n  constructor(private db: NgxIndexedDBService) { }\n\n  public addMachzor(machzor: Machzor): Observable<Machzor> {\n    return this.db.add(objectStores.MACHZORIM, {\n      hebStartDay: machzor.hebStartDay,\n      hebStartMonth: machzor.hebStartMonth,\n      hebStartYear: machzor.hebStartYear,\n      hebEndDay: machzor.hebEndDay,\n      hebEndMonth: machzor.hebEndMonth,\n      hebEndYear: machzor.hebEndYear,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n}","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {HomeComponent} from './home';\nimport {LoginComponent} from './login';\nimport {AuthGuard} from './_helpers';\nimport {CalendarComponent} from './calendar';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent, canActivate: [AuthGuard]},\n  {path: 'calendar', component: CalendarComponent, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n\n  // otherwise redirect to home\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({ selector: 'app-main', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/calendar\">Calendar</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n\n<div class=\"text-center mt-4\">\n    <p>\n        <a href=\"https://jasonwatmore.com/post/2020/04/19/angular-9-jwt-authentication-example-tutorial\" target=\"_top\">Angular 9 - JWT Authentication Example & Tutorial</a>\n    </p>\n    <p>\n        <a href=\"https://jasonwatmore.com\" target=\"_top\">JasonWatmore.com</a>\n    </p>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { HomeComponent } from './home';\nimport { CalendarComponent } from './calendar';\nimport { LoginComponent } from './login';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HebrewDatePickerComponent } from './hebrew-date-picker/hebrew-date-picker.component';\nimport { HebrewDatePickerRangeComponent } from './hebrew-date-picker-range/hebrew-date-picker-range.component';\nimport { MachzorimRepository } from './_services/machzorim.repository';\nimport { DBConfig } from 'ngx-indexed-db';\nimport { NgxIndexedDBModule } from 'ngx-indexed-db';\nimport * as objectStores from './_helpers/objectStores';\n\nexport function migrationFactory() {\n    return {\n        2: (db: IDBDatabase, transaction: IDBTransaction) => {\n            const store: IDBObjectStore = transaction.objectStore(objectStores.MACHZORIM);\n            store.createIndex('hebStartDay', 'hebStartDay', { unique: false });\n            store.createIndex('hebStartMonth', 'hebStartMonth', { unique: false });\n            store.createIndex('hebStartYear', 'hebStartYear', { unique: false });\n            store.createIndex('hebEndDay', 'hebEndDay', { unique: false });\n            store.createIndex('hebEndMonth', 'hebEndMonth', { unique: false });\n            store.createIndex('hebEndYear', 'hebEndYear', { unique: false });\n        }\n    };\n}\n\n// Database configuration\nconst dbConfig: DBConfig = {\n    name: 'Calendar',\n    version: 2,\n    objectStoresMeta: [{\n        store: 'machzorim',\n        storeConfig: { keyPath: 'id', autoIncrement: true },\n        storeSchema: [\n            { name: 'machzorStart', keypath: 'machzorStart', options: { unique: false } },\n            { name: 'machzorEnd', keypath: 'machzorEnd', options: { unique: false } }\n        ]\n    }],\n    migrationFactory\n};\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        NgbModule,\n        FormsModule,\n        NgxIndexedDBModule.forRoot(dbConfig)\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        CalendarComponent,\n        LoginComponent,\n        HebrewDatePickerComponent,\n        HebrewDatePickerRangeComponent,\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        fakeBackendProvider,\n\n        MachzorimRepository,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {User} from '@app/_models';\nimport {UserService} from '@app/_services';\n\n@Component({\n    templateUrl: 'calendar.component.html',\n    styleUrls: ['calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n    loading = false;\n    users: User[];\n\n    constructor(private userService: UserService) {\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.users = users;\n        });\n    }\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">You're in CALENDAR!</h4>\n    <div class=\"card-body\">\n        <div class=\"container-fluid\">\n\n            <hr>\n\n            <p>\n                This is a demo example forked from the <strong>ng-bootstrap</strong> project: Angular powered Bootstrap.\n                Visit <a href=\"https://ng-bootstrap.github.io/\" target=\"_blank\">https://ng-bootstrap.github.io</a> for more\n                widgets and demos.\n            </p>\n\n            <hr>\n            <app-hebrew-date-picker></app-hebrew-date-picker>\n            <app-hebrew-date-picker-range></app-hebrew-date-picker-range>\n        </div>\n    </div>\n</div>\n","export * from './calendar.component';\n","import {Component} from '@angular/core';\nimport { MachzorimRepository } from '@app/_services/machzorim.repository';\nimport {\n    NgbCalendar,\n    NgbCalendarHebrew,\n    NgbDate,\n    NgbDatepickerI18n,\n    NgbDatepickerI18nHebrew,\n    NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-hebrew-date-picker-range',\n    templateUrl: './hebrew-date-picker-range.component.html',\n    styleUrls: ['./hebrew-date-picker-range.component.less'],\n    providers: [\n        {provide: NgbCalendar, useClass: NgbCalendarHebrew},\n        {provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nHebrew}\n    ]\n})\nexport class HebrewDatePickerRangeComponent {\n\n    hoveredDate: NgbDate | null = null;\n    model: NgbDateStruct;\n\n    fromDate: NgbDate;\n    toDate: NgbDate | null = null;\n    mikvahDay: NgbDate;\n    vesetHachodeshDay: NgbDate;\n\n    constructor(private calendar: NgbCalendar,\n                public i18n: NgbDatepickerI18n,\n                private machzorim: MachzorimRepository) {\n        this.dayTemplateData = this.dayTemplateData.bind(this);\n        this.fromDate = calendar.getToday();\n        this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n    }\n\n    dayTemplateData(date: NgbDate) {\n        return {\n            gregorian: (this.calendar as NgbCalendarHebrew).toGregorian(date)\n        };\n    }\n\n    selectToday() {\n        this.model = this.calendar.getToday();\n    }\n\n    getPrevMonth(){\n        return this.calendar.getPrev(this.calendar.getToday(), 'm', 1);\n    }\n\n    onDateSelection(date: NgbDate) {\n        if (!this.fromDate && !this.toDate) {\n            this.fromDate = date;\n        } else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {\n            this.toDate = date;\n            this.mikvahDay = this.calendar.getNext(this.toDate, 'd', 7);\n            this.vesetHachodeshDay = this.calcVesetHachodeshDay(this.fromDate);\n        } else {\n            this.toDate = null;\n            this.fromDate = date;\n        }\n    }\n\n    isHovered(date: NgbDate) {\n        return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n    }\n\n    isInside(date: NgbDate) {\n        return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n    }\n\n    isRange(date: NgbDate) {\n        return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\n    }\n\n    isMikvahDay(date: NgbDate) {\n        return this.toDate && date.equals(this.mikvahDay);\n    }\n\n    private calcVesetHachodeshDay(fromDate: NgbDate) {\n        const VesetHachodeshMonth = this.calendar.getNext(this.fromDate, 'm', 1);\n        return new NgbDate(VesetHachodeshMonth.year, VesetHachodeshMonth.month, fromDate.day);\n    }\n\n    isVesetHachodeshDay(date: NgbDate) {\n        return this.toDate && date.equals(this.vesetHachodeshDay);\n    }\n\n    addMachzor() {\n        this.machzorim.addMachzor({\n            hebStartDay: this.fromDate.day,\n            hebStartMonth: this.fromDate.month,\n            hebStartYear: this.fromDate.year,\n            hebEndDay: this.toDate.day,\n            hebEndMonth: this.toDate.month,\n            hebEndYear: this.toDate.year\n          }).subscribe(() => console.log(\"Successfully added\"));\n    }\n}\n","<p>Example of the range selection</p>\n\n<ngb-datepicker\n        class=\"hebrew rtl\"\n        #dp (dateSelect)=\"onDateSelection($event)\"\n        [displayMonths]=\"3\"\n        [dayTemplate]=\"t\"\n        [startDate]=getPrevMonth()\n        [firstDayOfWeek]=\"7\"\n        [dayTemplate]=\"t\"\n        [dayTemplateData]=\"dayTemplateData\"\n        outsideDays=\"hidden\"\n>\n</ngb-datepicker>\n\n<ng-template #t let-date let-data=\"data\" let-focused=\"focused\">\n  <span class=\"hebrew-day\"\n        [class.focused]=\"focused\"\n        [class.range]=\"isRange(date)\"\n        [class.faded]=\"isHovered(date) || isInside(date)\"\n        [class.mikvah-day]=\"isMikvahDay(date)\"\n        [class.veset-hachodesh-day]=\"isVesetHachodeshDay(date)\"\n        (mouseenter)=\"hoveredDate = date\"\n        (mouseleave)=\"hoveredDate = null\">\n      <div class=\"hebrew-num\">{{ i18n.getDayNumerals(date) }}</div>\n      <div class=\"gregorian-num\">{{ data.gregorian.day + '/' + (data.gregorian.month) }}</div>\n\n  </span>\n</ng-template>\n\n<ng-template #dt let-date let-data=\"data\" let-selected=\"selected\" let-currentMonth=\"currentMonth\">\n    <div class=\"hebrew-day\"\n         [class.outside]=\"date.month !== currentMonth\"\n         [class.selected]=\"selected\">\n        <div class=\"hebrew-num\">{{ i18n.getDayNumerals(date) }}</div>\n        <div class=\"gregorian-num\">{{ data.gregorian.day + '/' + (data.gregorian.month) }}</div>\n    </div>\n</ng-template>\n\n<hr />\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"addMachzor()\">Add Machzor</button>\n<hr />\n\n<pre>From: {{ fromDate | json }} </pre>\n<pre>To: {{ toDate | json }} </pre>\n<pre>mikvahDay: {{ this.mikvahDay | json }} </pre>\n<pre>vesetHachodeshDay: {{ this.vesetHachodeshDay | json }} </pre>\n\n\n\n","import { Component} from '@angular/core';\nimport { MachzorimRepository } from '@app/_services/machzorim.repository';\nimport {\n  NgbCalendar,\n  NgbCalendarHebrew, NgbDate,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-hebrew-date-picker',\n  templateUrl: './hebrew-date-picker.component.html',\n  styleUrls: ['./hebrew-date-picker.component.less'],\n  providers: [\n    {provide: NgbCalendar, useClass: NgbCalendarHebrew},\n    {provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nHebrew}\n  ]\n})\nexport class HebrewDatePickerComponent {\n\n  model: NgbDateStruct;\n\n  constructor(private calendar: NgbCalendar,\n              public i18n: NgbDatepickerI18n,\n              private machzorim: MachzorimRepository) {\n    this.dayTemplateData = this.dayTemplateData.bind(this);\n  }\n\n  dayTemplateData(date: NgbDate) {\n    return {\n      gregorian: (this.calendar as NgbCalendarHebrew).toGregorian(date)\n    };\n  }\n\n  selectToday() {\n    this.model = this.calendar.getToday();\n  }\n\n  public addMachzor() {\n    this.machzorim.addMachzor({\n      hebStartDay: this.model.day,\n      hebStartMonth: this.model.month,\n      hebStartYear: this.model.year\n    }).subscribe(() => console.log('Successfully added'));\n  }\n}\n","<p>\n    The Hebrew or Jewish calendar is a lunisolar calendar.\n    In Israel it is used for religious purposes and frequently as an official calendar for civil purposes.\n</p>\n\n<ngb-datepicker\n        class=\"hebrew rtl\"\n        #dp [(ngModel)]=\"model\"\n        [displayMonths]=\"3\"\n        [firstDayOfWeek]=\"7\"\n        [dayTemplate]=\"dt\"\n        [dayTemplateData]=\"dayTemplateData\">\n</ngb-datepicker>\n\n<ng-template #dt let-date let-data=\"data\" let-selected=\"selected\" let-currentMonth=\"currentMonth\">\n    <div class=\"hebrew-day\" [class.outside]=\"date.month !== currentMonth\" [class.selected]=\"selected\">\n        <div class=\"gregorian-num\">{{ data.gregorian.day + '/' + (data.gregorian.month) }}</div>\n        <div class=\"hebrew-num\">{{ i18n.getDayNumerals(date) }}</div>\n    </div>\n</ng-template>\n\n<hr/>\n\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"selectToday()\">Select Today</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"dp.navigateTo()\">To current month</button>\n<button class=\"btn btn-sm btn-outline-primary mr-2\" (click)=\"addMachzor()\">Add Machzor</button>\n\n<hr/>\n\n<pre>Model: {{ model | json }}</pre>\n","import {Component, OnInit} from '@angular/core';\nimport {first} from 'rxjs/operators';\n\nimport {User} from '@app/_models';\nimport {UserService} from '@app/_services';\n\n@Component({templateUrl: 'home.component.html'})\nexport class HomeComponent implements OnInit {\n    loading = false;\n    users: User[];\n\n    constructor(private userService: UserService) {\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.users = users;\n        });\n    }\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">You're logged in with Angular 9 & JWT!!</h4>\n    <div class=\"card-body\">\n        <h6>Users from secure api end point</h6>\n        <div *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\"></div>\n        <ul *ngIf=\"users\">\n            <li *ngFor=\"let user of users\">{{user.firstName}} {{user.lastName}}</li>\n        </ul>\n    </div>\n</div>","export * from './home.component';\n","export * from './login.component';","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: UntypedFormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    constructor(\n        private formBuilder: UntypedFormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                () => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <div class=\"alert alert-info\">\n        Username: test<br />\n        Password: test\n    </div>\n    <div class=\"card\">\n        <h4 class=\"card-header\">Angular 9 JWT Login Example</h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    </div>\n                </div>\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n            </form>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}